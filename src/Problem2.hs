module Problem2 where
{--
Task description:
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not exceed four million.
--}

-- Generating the fibonacci terms:
fibonacci :: Integer -> Integer
fibonacci 0 = 1
fibonacci 1 = 1
fibonacci n = fibonacci (n-1) + fibonacci (n-2)

-- ->Found a pattern for the even ones:
evenFibonacci :: Integer -> Integer
evenFibonacci 0 = 2
evenFibonacci 1 = 8
evenFibonacci n = evenFibonacci (n-1) * 4 + evenFibonacci (n-2)

-- little helpy filter :P
evenList :: Integer -> [Integer]
evenList x = if evenFibonacci x <= 4000000
  then evenFibonacci x : evenList (x+1)
  else []

problem2 :: Integer
problem2 = sum (evenList 0)

main = print problem2
